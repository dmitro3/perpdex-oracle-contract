{
  "address": "0x06cf9eEC832f65cfbfe88AE5595beaF97bf011a7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IDIAOracleV2",
          "name": "oracleArg",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "oracleKeyArg",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "QUOTE_ASSET",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IDIAOracleV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa11830760348b6ba5549e6380e031802aa57842822189fb5fed5d835a32e770f",
  "receipt": {
    "to": null,
    "from": "0x4B78eCe4AA1be3495713199380635537C5fB2326",
    "contractAddress": "0x06cf9eEC832f65cfbfe88AE5595beaF97bf011a7",
    "transactionIndex": 0,
    "gasUsed": "349372",
    "logsBloom": "0x
    "blockHash": "0x5f4365df5969ed9d6110da994cead3c705e6f4540883279df16a2d42add2b737",
    "transactionHash": "0xa11830760348b6ba5549e6380e031802aa57842822189fb5fed5d835a32e770f",
    "logs": [],
    "blockNumber": 1603752,
    "cumulativeGasUsed": "349372",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x1232AcD632Dd75f874E357c77295Da3f5Cd7733E", "KSM/USD"],
  "numDeployments": 1,
  "solcInputHash": "b60c928cad25a62b19ba273872debabe",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDIAOracleV2\",\"name\":\"oracleArg\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"oracleKeyArg\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"QUOTE_ASSET\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IDIAOracleV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPrice()\":{\"details\":\"Returns the index price of the token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DiaPriceFeed.sol\":\"DiaPriceFeed\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"contracts/DiaPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.7.6;\\npragma experimental ABIEncoderV2;\\n\\nimport { Address } from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport { IPerpdexPriceFeed } from \\\"./interface/IPerpdexPriceFeed.sol\\\";\\nimport { IDIAOracleV2 } from \\\"./interface/dia/IDIAOracleV2.sol\\\";\\n\\ncontract DiaPriceFeed is IPerpdexPriceFeed {\\n    using Address for address;\\n\\n    //\\n    // STATE\\n    //\\n    string public constant QUOTE_ASSET = \\\"USD\\\";\\n\\n    IDIAOracleV2 public immutable oracle;\\n    string public oracleKey;\\n\\n    //\\n    // EXTERNAL NON-VIEW\\n    //\\n\\n    constructor(IDIAOracleV2 oracleArg, string memory oracleKeyArg) {\\n        require(address(oracleArg).isContract(), \\\"DPF_C: ref address not contract\\\");\\n\\n        oracle = oracleArg;\\n        oracleKey = oracleKeyArg;\\n    }\\n\\n    //\\n    // EXTERNAL VIEW\\n    //\\n\\n    function getPrice() external view override returns (uint256) {\\n        (uint128 value, ) = _getOracleData();\\n        return value;\\n    }\\n\\n    //\\n    // EXTERNAL PURE\\n    //\\n\\n    function decimals() external pure override returns (uint8) {\\n        // We assume DIA always has 8 decimals\\n        // https://github.com/diadata-org/diadata/blob/master/cmd/blockchain/ethereum/diaOracleV2Service/main.go#L148\\n        return 8;\\n    }\\n\\n    //\\n    // INTERNAL VIEW\\n    //\\n\\n    function _getOracleData() internal view returns (uint128, uint128) {\\n        (uint128 value, uint128 timestamp) = oracle.getValue(oracleKey);\\n        require(timestamp > 0, \\\"DPF_GOD: time is zero\\\");\\n        require(value > 0, \\\"DPF_GOD: invalid price\\\");\\n\\n        return (value, timestamp);\\n    }\\n}\\n\",\"keccak256\":\"0x06468bab3961b1fd059a5695428893ab2afd6af17dda7dc89aa086c7c2ad3c4d\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interface/IPerpdexPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.7.6;\\n\\ninterface IPerpdexPriceFeed {\\n    function decimals() external view returns (uint8);\\n\\n    /// @dev Returns the index price of the token.\\n    function getPrice() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x6289c246a3791213f4bd4cf2a16c8fb6876c403dd627eabea39a092af3834a55\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interface/dia/IDIAOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.7.6;\\n\\ninterface IDIAOracleV2 {\\n    function getValue(string memory key) external view returns (uint128, uint128);\\n}\\n\",\"keccak256\":\"0xae6b993996250cb53edc32aaa1c183481e397bbbaac97e52aacc291e53e58203\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161072c38038061072c83398101604081905261002f91610144565b61004b826001600160a01b031661009d60201b6101b21760201c565b6100705760405162461bcd60e51b81526004016100679061021c565b60405180910390fd5b6001600160601b0319606083901b1660805280516100959060009060208401906100a3565b505050610253565b3b151590565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826100d9576000855561011f565b82601f106100f257805160ff191683800117855561011f565b8280016001018555821561011f579182015b8281111561011f578251825591602001919060010190610104565b5061012b92915061012f565b5090565b5b8082111561012b5760008155600101610130565b60008060408385031215610156578182fd5b82516001600160a01b038116811461016c578283fd5b602084810151919350906001600160401b038082111561018a578384fd5b818601915086601f83011261019d578384fd5b8151818111156101a957fe5b604051601f8201601f19168101850183811182821017156101c657fe5b60405281815283820185018910156101dc578586fd5b8592505b818310156101fd57838301850151818401860152918401916101e0565b8183111561020d57858583830101525b80955050505050509250929050565b6020808252601f908201527f4450465f433a207265662061646472657373206e6f7420636f6e747261637400604082015260600190565b60805160601c6104b86102746000398060c852806101c452506104b86000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063313ce5671461005c5780637dc0d1d01461007a57806398d5fdca1461008f5780639d1f048e146100a4578063f06a1e13146100b9575b600080fd5b6100646100c1565b6040516100719190610468565b60405180910390f35b6100826100c6565b604051610071919061030f565b6100976100ea565b604051610071919061045f565b6100ac610105565b6040516100719190610323565b6100ac610193565b600890565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806100f56101bc565b506001600160801b031691505090565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561018b5780601f106101605761010080835404028352916020019161018b565b820191906000526020600020905b81548152906001019060200180831161016e57829003601f168201915b505050505081565b604051806040016040528060038152602001621554d160ea1b81525081565b803b15155b919050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663960384a060006040518263ffffffff1660e01b815260040161020f9190610376565b604080518083038186803b15801561022657600080fd5b505afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e91906102dd565b915091506000816001600160801b0316116102945760405162461bcd60e51b815260040161028b90610430565b60405180910390fd5b6000826001600160801b0316116102bd5760405162461bcd60e51b815260040161028b90610400565b90925090509091565b80516001600160801b03811681146101b757600080fd5b600080604083850312156102ef578182fd5b6102f8836102c6565b9150610306602084016102c6565b90509250929050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b8181101561034f57858101830151858201604001528201610333565b818111156103605783604083870101525b50601f01601f1916929092016040019392505050565b6000602080830181845282855460018082166000811461039d57600181146103bb576103f3565b60028304607f16855260ff19831660408901526060880193506103f3565b600283048086526103cb8a610476565b885b828110156103e95781548b8201604001529084019088016103cd565b8a01604001955050505b5091979650505050505050565b6020808252601690820152754450465f474f443a20696e76616c696420707269636560501b604082015260600190565b6020808252601590820152744450465f474f443a2074696d65206973207a65726f60581b604082015260600190565b90815260200190565b60ff91909116815260200190565b6000908152602090209056fea2646970667358221220aa3f48d4d9668532e88fe87d5a12faf1e34fbe7cd13f7192d040b4e647ce1ddf64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063313ce5671461005c5780637dc0d1d01461007a57806398d5fdca1461008f5780639d1f048e146100a4578063f06a1e13146100b9575b600080fd5b6100646100c1565b6040516100719190610468565b60405180910390f35b6100826100c6565b604051610071919061030f565b6100976100ea565b604051610071919061045f565b6100ac610105565b6040516100719190610323565b6100ac610193565b600890565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806100f56101bc565b506001600160801b031691505090565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561018b5780601f106101605761010080835404028352916020019161018b565b820191906000526020600020905b81548152906001019060200180831161016e57829003601f168201915b505050505081565b604051806040016040528060038152602001621554d160ea1b81525081565b803b15155b919050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663960384a060006040518263ffffffff1660e01b815260040161020f9190610376565b604080518083038186803b15801561022657600080fd5b505afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e91906102dd565b915091506000816001600160801b0316116102945760405162461bcd60e51b815260040161028b90610430565b60405180910390fd5b6000826001600160801b0316116102bd5760405162461bcd60e51b815260040161028b90610400565b90925090509091565b80516001600160801b03811681146101b757600080fd5b600080604083850312156102ef578182fd5b6102f8836102c6565b9150610306602084016102c6565b90509250929050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b8181101561034f57858101830151858201604001528201610333565b818111156103605783604083870101525b50601f01601f1916929092016040019392505050565b6000602080830181845282855460018082166000811461039d57600181146103bb576103f3565b60028304607f16855260ff19831660408901526060880193506103f3565b600283048086526103cb8a610476565b885b828110156103e95781548b8201604001529084019088016103cd565b8a01604001955050505b5091979650505050505050565b6020808252601690820152754450465f474f443a20696e76616c696420707269636560501b604082015260600190565b6020808252601590820152744450465f474f443a2074696d65206973207a65726f60581b604082015260600190565b90815260200190565b60ff91909116815260200190565b6000908152602090209056fea2646970667358221220aa3f48d4d9668532e88fe87d5a12faf1e34fbe7cd13f7192d040b4e647ce1ddf64736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPrice()": {
        "details": "Returns the index price of the token."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7897,
        "contract": "contracts/DiaPriceFeed.sol:DiaPriceFeed",
        "label": "oracleKey",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}
